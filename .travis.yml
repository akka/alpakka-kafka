version: ~> 1.0
language: scala

services:
  - docker

before_install:
  # fetch full history for correct current and previous version detection
  - git fetch --unshallow
  # using jabba for custom jdk management
  - if [ ! -f ~/.jabba/jabba.sh ]; then curl -sL https://raw.githubusercontent.com/shyiko/jabba/0.11.2/install.sh | bash ; fi
  - . ~/.jabba/jabba.sh
  - jabba install adopt@~1.8-0
  - jabba install adopt@~1.11-0

script:
  - jabba use ${JDK:=adopt@~1.8-0}
  - java -version
  - sbt -jvm-opts .jvmopts-travis "$CMD"

jobs:
  include:
#    - stage: check
#      env: CMD="verifyCodeStyle ; mimaReportBinaryIssues"
#      name: "Code style check and binary-compatibility check. Run locally with: sbt 'verifyCodeStyle ; mimaReportBinaryIssues'"
#    - env: CMD="Test/compile ; It/compile"
#      name: "Compile all code with fatal warnings for Scala 2.13. Run locally with: env CI=true sbt 'clean ; Test/compile ; It/compile'"
#    - env: CMD="verifyDocs"
#      name: "Create all API docs for artifacts/website and all reference docs. Run locally with: sbt verifyDocs"
#
#    - stage: test
#      env: CMD="++2.12.11 test"
#      name: "Run tests with Scala 2.12 and AdoptOpenJDK 8"
#    - env: CMD="++2.13.2 test"
#      name: "Run tests with Scala 2.13 and AdoptOpenJDK 8"
#    - env:
#      - JDK="adopt@~1.11-0"
#      - _JAVA_OPTIONS="-XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler"
#      - CMD="++2.12.11 test"
#      name: "Run tests with Scala 2.12 and AdoptOpenJDK 11"
#    - env:
#      - JDK="adopt@~1.11-0"
#      - _JAVA_OPTIONS="-XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler"
#      - CMD="++2.13.2 test"
#      name: "Run tests with Scala 2.13 and AdoptOpenJDK 11"

    - stage: integration
      env: CMD="tests/it:testOnly *.TransactionsSourceSpec -- -DtimesToRepeat=20"
      name: "Run multi-broker and long running integration tests"
#    - env: CMD="benchmarks/it:compile"
#      name: "Compile benchmark tests"
#
#    - stage: whitesource
#      env: CMD=";whitesourceCheckPolicies ;whitesourceUpdate"
#
#    - stage: publish
#      env: CMD="+publish"
#      name: "Publish artifacts for all Scala versions"
#    - script: openssl aes-256-cbc -K $encrypted_d80875c2ae41_key -iv $encrypted_d80875c2ae41_iv -in .travis/travis_alpakka_kafka_rsa.enc -out .travis/id_rsa -d && eval "$(ssh-agent -s)" && chmod 600 .travis/id_rsa && ssh-add .travis/id_rsa && sbt -jvm-opts .jvmopts-travis '++2.13.2 docs/publishRsync'
#      name: "Publish API and reference documentation"

stages:
  # runs on master commits and PRs
#  - name: check
#    if: NOT tag =~ ^v
#
#  # runs on master commits and PRs
#  - name: test
#    if: NOT tag =~ ^v

  # runs on master commits and PRs
  - name: integration
    if: NOT tag =~ ^v

  # runs on main repo master commits and version-tagged commits
#  - name: whitesource
#    if: repo = akka/alpakka-kafka AND ( ( branch = master AND type = push ) OR tag =~ ^v )
#
#  # runs on main repo master commits and version-tagged commits
#  - name: publish
#    if: repo = akka/alpakka-kafka AND ( ( branch = master AND type = push ) OR tag =~ ^v )

after_failure:
  - docker-compose logs
  - find . -name "*.log" -exec ./scripts/cat-log.sh {} \;

before_cache:
  - find $HOME/.ivy2/ -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt   -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt
    - $HOME/.jabba

env:
  global:
    # encrypt with: travis encrypt WHITESOURCE_PASSWORD=...
    - secure: "ed6tomZjtrq85XLGvpoA1KUcZ55OoWiPdwN0ujqRTTGilOG2p9jAZCARYNSXWdSAtga0gKoW1nCy7SMzl3lcdP5Hlj7MK96R5h7QTHeTh5k8R/aG5fFilWnrvY2rsh0EvuINUkjvyl/jRxDDQpN8mm0NZwHRdsK0sMly4G6XNdY="
    # encrypt with: travis encrypt BINTRAY_USER=...
    - secure: "NLb9af0D3zS8UIHYqK86sLapFIN/iBpgXwjhc3t8e7bbVRVS1VKMNoqpzn75sd7rgYsComWboFUAo1oDMnGuOTf2onVOLDPWmp4QK568DVQTlEJ9rSI02RijjoPx4ViksI7wbh7Lz9VtupQVnBYU34Ozn7tuK12NGEHxQd9fCNE="
    # encrypt with: travis encrypt BINTRAY_PASS=...
    - secure: "DAhVvZ5hBy1MAznBCrQu6Rw6Pa7pCmqkpsYQFxG+y8Hsvi37WNMfyCOYcR6VnunMYWHDaFJ8LaqgWx8O4Usrl6JxZYt2J/jT7axKLqpsZg7xWaB2++tFWI2lZJewvb6EnPIZuEdr5oVKnazD5f55mxSqprOAHebim5IOXVaRGS0="
    # override default akka.test.timefactor
    - AKKA_TEST_TIMEFACTOR=10.0
