language: scala
sudo: false

services:
  - docker

jobs:
  include:
    - stage: check
      script: sbt scalafmtCheck || { echo "[error] Unformatted code found. Please run 'test:compile' and commit the reformatted code."; false; }
      env: SCALAFMT_CHECK
    - script: sbt scalafmtSbtCheck || { echo "[error] Unformatted sbt code found. Please run 'scalafmtSbt' and commit the reformatted code."; false; }
      env: SCALAFMT_SBT_CHECK

    - stage: test
      script: sbt -jvm-opts .jvmopts-travis +test
      jdk: oraclejdk8

    - script: sbt -jvm-opts .jvmopts-travis +test
      jdk: oraclejdk9

    - script: sbt -jvm-opts .jvmopts-travis mimaReportBinaryIssues
      jdk: oraclejdk8
      env: mimaReportBinaryIssues

    - stage: integration
      script: sbt -jvm-opts .jvmopts-travis "core/dockerComposeTest it:test --scale kafka=3"

    - stage: whitesource
      script: sbt -jvm-opts .jvmopts-travis whitesourceCheckPolicies whitesourceUpdate
      jdk: oraclejdk8

    - stage: publish
      script: sbt -jvm-opts .jvmopts-travis +publish
      jdk: oraclejdk8

stages:
  # runs on master commits and PRs
  - name: check
    if: NOT tag =~ ^v

  # runs on master commits and PRs
  - name: test
    if: NOT tag =~ ^v
    
  # runs on master commits and PRs
  - name: integration
    if: NOT tag =~ ^v

  # runs on main repo master commits and version-tagged commits
  - name: whitesource
    if: repo = akka/reactive-kafka AND ( ( branch = master AND type = push ) OR tag =~ ^v )

  # runs on main repo master commits and version-tagged commits
  - name: publish
    if: repo = akka/reactive-kafka AND ( ( branch = master AND type = push ) OR tag =~ ^v )

before_cache:
  - find $HOME/.ivy2/ -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt   -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot

env:
  global:
    # encrypt with: travis encrypt WHITESOURCE_PASSWORD=...
    - secure: "ed6tomZjtrq85XLGvpoA1KUcZ55OoWiPdwN0ujqRTTGilOG2p9jAZCARYNSXWdSAtga0gKoW1nCy7SMzl3lcdP5Hlj7MK96R5h7QTHeTh5k8R/aG5fFilWnrvY2rsh0EvuINUkjvyl/jRxDDQpN8mm0NZwHRdsK0sMly4G6XNdY="
    # encrypt with: travis encrypt BINTRAY_USER=...
    - secure: "EQU8T1lwWKm4770Ivz2QLn830iCC+GrjthZsbatx+0kmnNMotc3Mllxjt4Iph+qnq5ffQK8DRQoTVLHBGavNDkooOBC3irrMwuvtRto5NlcscHfF1OBU1AVlVhregONmThDWQHyA/0l5w68A9Eqe6XrCLdRnwtWM+maud9FqHSU="
    # encrypt with: travis encrypt BINTRAY_PASS=...
    - secure: "cQY+jITDEZ9rdhHA8ZXYuf3Phrf6UkJqjYdsmtvSe4KNX7W2debD+xIkLZEUC0mC0VC/b2FiN2J+ONY+pS/+j8k8J6SrkSiLUJP1E/7NU7MhoR2tFWNuepO3AcJd/5pDg5n7NQ7H4rwOCSEPIFw4ZN85Lps2NqVCmLQ7piQ1G7g="
